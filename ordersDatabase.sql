use new_orders;

CREATE TABLE SALESMAN (
Salesman_id INT PRIMARY KEY,
Name VARCHAR(255),
City VARCHAR(255),
Commission DECIMAL(10,2)
);

CREATE TABLE CUSTOMER (
Customer_id INT PRIMARY KEY,
Cust_Name VARCHAR(255),
City VARCHAR(255),
Grade INT,
Salesman_id INT,
FOREIGN KEY (Salesman_id) REFERENCES SALESMAN(Salesman_id)
);

CREATE TABLE ORDERS (
Ord_No INT PRIMARY KEY,
Purchase_Amt DECIMAL(10,2),
Ord_Date DATE,
Customer_id INT,
Salesman_id INT,
FOREIGN KEY (Customer_id) REFERENCES CUSTOMER(Customer_id),
FOREIGN KEY (Salesman_id) REFERENCES SALESMAN(Salesman_id)
);


INSERT INTO SALESMAN VALUES(1000, 'RAJ', 'BENGALURU', 50);
INSERT INTO SALESMAN VALUES(2000, 'ASHWIN', 'TUMKUR', 30);
INSERT INTO SALESMAN VALUES(3000, 'BINDU', 'MUMBAI', 40);
INSERT INTO SALESMAN VALUES(4000, 'LAVANYA', 'BENGALURU', 40);
INSERT INTO SALESMAN VALUES(5000, 'ROHIT', 'MYSORE', 60);

INSERT INTO CUSTOMER VALUES(11, 'INFOSYS', 'BENGALURU', 5, 1000);
INSERT INTO CUSTOMER VALUES(22, 'TCS', 'BENGALURU', 4, 2000);
INSERT INTO CUSTOMER VALUES(33, 'WIPRO', 'MYSORE', 7, 1000);
INSERT INTO CUSTOMER VALUES(44, 'TCS', 'MYSORE', 6, 2000);
INSERT INTO CUSTOMER VALUES(55, 'ORACLE', 'TUMKUR', 3, 3000);

INSERT INTO ORDERS VALUES(1, 200000, '2016-04-12', 11, 1000);
INSERT INTO ORDERS VALUES(2, 300000, '2016-04-12', 11, 2000);
INSERT INTO ORDERS VALUES(3, 400000, '2017-04-15', 22, 1000);

SELECT * FROM SALESMAN;
SELECT * FROM CUSTOMER;
SELECT * FROM ORDERS;

SELECT COUNT(*) FROM 
CUSTOMER WHERE CITY='BENGALURU' AND GRADE >(
SELECT AVG(GRADE)
FROM CUSTOMER WHERE CITY LIKE '%BENGALURU');

SELECT NAME,COUNT(CUSTOMER_ID) FROM SALESMAN S,CUSTOMER C
WHERE S.SALESMAN_ID=C.SALESMAN_ID
GROUP BY NAME 
HAVING COUNT(CUSTOMER_ID)>1;

SELECT S.NAME, 'HAS COSTOMERS IN CITY'
FROM SALESMAN S
JOIN CUSTOMER C ON S.SALESMAN_ID=C.SALESMAN_ID AND S.CITY=C.CITY 
UNION
SELECT S.NAME, 'NO CUSTOMERS IN CITY'
FROM SALESMAN S
WHERE NOT EXISTS(
SELECT 1
FROM CUSTOMER C
WHERE S.SALESMAN_ID=C.SALESMAN_ID AND S.CITY=C.CITY
);
CREATE VIEW SALESHIGHESTORDER AS
SELECT O.SALESMAN_ID,MAX(O.PURCHASE_AMT) AS HIGHESTPURCHASEAMT
FROM ORDERS O
GROUP BY O.SALESMAN_ID,O.ORD_DATE;

SELECT * FROM SALESHIGHESTORDER;
SET FOREIGN_KEY_CHECKS = 0;
DELETE FROM ORDERS WHERE Salesman_id = 1000;
SELECT * FROM CUSTOMER;
DELETE FROM CUSTOMER WHERE Salesman_id = 1000;
DELETE FROM SALESMAN WHERE Salesman_id = 1000;
SELECT * FROM SALESMAN;
SET FOREIGN_KEY_CHECKS = 1;